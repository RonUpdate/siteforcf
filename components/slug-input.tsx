"use client"

import type React from "react"

import { useState, useEffect } from "react"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Button } from "@/components/ui/button"
import { Loader2, RefreshCw } from "lucide-react"
import { generateSlug } from "@/utils/slug-utils"

interface SlugInputProps {
  title: string
  initialSlug?: string
  onChange: (slug: string) => void
  disabled?: boolean
  className?: string
}

export default function SlugInput({
  title,
  initialSlug = "",
  onChange,
  disabled = false,
  className = "",
}: SlugInputProps) {
  const [slug, setSlug] = useState(initialSlug)
  const [isAutoGenerated, setIsAutoGenerated] = useState(!initialSlug)
  const [isGenerating, setIsGenerating] = useState(false)

  // Автоматически обновляем слаг при изменении заголовка, если включена автогенерация
  useEffect(() => {
    if (isAutoGenerated && title) {
      const newSlug = generateSlug(title)
      setSlug(newSlug)
      onChange(newSlug)
    }
  }, [title, isAutoGenerated, onChange])

  // Обновляем состояние при изменении initialSlug извне
  useEffect(() => {
    if (initialSlug && initialSlug !== slug) {
      setSlug(initialSlug)
      setIsAutoGenerated(false)
    }
  }, [initialSlug])

  const handleSlugChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const newSlug = e.target.value
    setSlug(newSlug)
    onChange(newSlug)
    setIsAutoGenerated(false)
  }

  const regenerateSlug = () => {
    if (!title) return

    setIsGenerating(true)
    try {
      const newSlug = generateSlug(title)
      setSlug(newSlug)
      onChange(newSlug)
      setIsAutoGenerated(true)
    } finally {
      setIsGenerating(false)
    }
  }

  return (
    <div className={className}>
      <div className="flex justify-between items-center mb-2">
        <Label htmlFor="slug">URL (слаг)</Label>
        <Button
          type="button"
          variant="outline"
          size="sm"
          onClick={regenerateSlug}
          disabled={disabled || isGenerating || !title}
        >
          {isGenerating ? <Loader2 className="h-4 w-4 mr-2 animate-spin" /> : <RefreshCw className="h-4 w-4 mr-2" />}
          Сгенерировать из заголовка
        </Button>
      </div>
      <div className="flex items-center">
        <span className="text-sm text-gray-500 mr-2">/</span>
        <Input
          id="slug"
          name="slug"
          value={slug}
          onChange={handleSlugChange}
          disabled={disabled}
          placeholder="url-stranitsy"
          className="flex-1"
        />
      </div>
      <p className="text-xs text-gray-500 mt-1">
        {isAutoGenerated ? "Слаг автоматически генерируется из заголовка" : "Слаг можно изменить вручную"}
      </p>
    </div>
  )
}
